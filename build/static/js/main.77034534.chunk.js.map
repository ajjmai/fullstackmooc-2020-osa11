{"version":3,"sources":["reducers/notificationReducer.js","services/blogs.js","reducers/blogReducer.js","services/login.js","reducers/loginReducer.js","services/users.js","reducers/userReducer.js","store.js","components/StyledComponents.js","components/NotificationMessage.js","components/user/LoginForm.js","components/user/UserList.js","components/user/User.js","components/blog/BlogForm.js","components/Togglable.js","components/blog/BlogList.js","components/blog/CommentForm.js","components/blog/Blog.js","components/user/LoggedUserInfo.js","App.js","index.js"],"names":["initialState","content","className","timer","setNotification","dispatch","setTimeout","clearNotification","type","data","notificationReducer","state","action","clearTimeout","baseUrl","token","blogService","getAll","a","axios","get","response","create","newBlog","config","headers","Authorization","post","update","updatedBlog","put","id","remove","delete","setToken","newToken","addComment","comment","sortByLikes","b","likes","addBlog","blog","updateBlog","userId","user","likedBlog","deleteBlog","blogId","reducer","sort","map","filter","find","blogWithNewComment","comments","concat","loginService","login","credentials","window","localStorage","setItem","JSON","stringify","userObject","name","userService","then","combineReducers","notification","blogs","blogReducer","loginReducer","users","userReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","Button","styled","button","LogoutButton","Footer","div","InlineButton","Input","input","Navigation","NavLink","NavText","p","Notification","Page","Title","h1","SubTitle1","SubTitle2","NotificationMessage","useSelector","LoginForm","handleLogin","useState","username","setUsername","password","setPassword","onSubmit","event","preventDefault","value","onChange","target","UserList","alignCenter","textAlign","verticalAlign","to","style","length","User","title","BlogForm","createBlog","setTitle","author","setAuthor","url","setUrl","Togglable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","onClick","buttonLabel","children","displayName","BlogList","useDispatch","blogFormRef","useRef","blogStyle","paddingTop","paddingLeft","border","borderWidth","marginBottom","blogObject","current","exeption","CommentForm","setComment","Blog","likeBlog","loggedInUserId","removeBlog","own","creator","useMemo","href","index","LoggedUserInfo","history","useHistory","clear","push","App","loggedInUser","userMatch","useRouteMatch","blogMatch","useEffect","loggedUserJSON","getItem","parse","blogCreator","blogToDelete","confirm","params","path","newComment","commentBlog","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.77034534.chunk.js","sourcesContent":["const initialState = { content: null, className: null, timer: null }\n\nconst notificationReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_NOTIFICATION':\n      if (state.timer) {\n        clearTimeout(state.timer)\n      }\n      return {\n        content: action.data.content,\n        className: action.data.className,\n        timer: action.data.timer,\n      }\n    case 'CLEAR_NOTIFICATION':\n      return initialState\n    default:\n      return state\n  }\n}\n\nexport const setNotification = (content, className) => {\n  return (dispatch) => {\n    const timer = setTimeout(() => {\n      dispatch(clearNotification())\n    }, 5000)\n    dispatch({\n      type: 'SET_NOTIFICATION',\n      data: { content, className, timer },\n    })\n  }\n}\n\nexport const clearNotification = () => {\n  return {\n    type: 'CLEAR_NOTIFICATION',\n  }\n}\n\nexport default notificationReducer\n","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst create = async (newBlog) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.post(baseUrl, newBlog, config)\n  return response.data\n}\n\nconst update = async (updatedBlog) => {\n  const response = await axios.put(`${baseUrl}/${updatedBlog.id}`, updatedBlog)\n  return response.data\n}\n\nconst remove = async (id) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  return await axios.delete(`${baseUrl}/${id}`, config)\n}\n\nconst addComment = async (id, comment) => {\n  const response = await axios.post(`${baseUrl}/${id}/comments`, { comment })\n  return response.data\n}\n\nconst blogService = { getAll, create, update, remove, setToken, addComment }\n\nexport default blogService\n","import blogService from '../services/blogs'\n\nconst reducer = (state = [], action) => {\n  switch (action.type) {\n    case 'INIT_BLOGS':\n      return action.data.sort(sortByLikes)\n    case 'NEW_BLOG':\n      return [...state, action.data].sort(sortByLikes)\n    case 'LIKE_BLOG':\n      return state\n        .map((b) => (b.id !== action.data.id ? b : action.data))\n        .sort(sortByLikes)\n    case 'DELETE_BLOG':\n      return state.filter((b) => b.id !== action.data)\n    case 'NEW_COMMENT': {\n      const blog = state.find((b) => b.id === action.data.id)\n      const blogWithNewComment = {\n        ...blog,\n        comments: blog.comments.concat(action.data.comment),\n      }\n      return state.map((b) =>\n        b.id !== action.data.id ? b : blogWithNewComment\n      )\n    }\n    default:\n      return state\n  }\n}\n\nfunction sortByLikes(a, b) {\n  return b.likes - a.likes\n}\n\nexport const initialiseBlogs = () => {\n  return async (dispatch) => {\n    const blogs = await blogService.getAll()\n    dispatch({\n      type: 'INIT_BLOGS',\n      data: blogs,\n    })\n  }\n}\n\nexport const addBlog = (blog) => {\n  return async (dispatch) => {\n    const newBlog = await blogService.create(blog)\n    dispatch({ type: 'NEW_BLOG', data: newBlog })\n  }\n}\n\nexport const updateBlog = (blog, userId) => {\n  return async (dispatch) => {\n    const likedBlog = await blogService.update({ ...blog, user: userId })\n    dispatch({\n      type: 'LIKE_BLOG',\n      data: likedBlog,\n    })\n  }\n}\n\nexport const deleteBlog = (blogId) => {\n  return async (dispatch) => {\n    await blogService.remove(blogId)\n    dispatch({\n      type: 'DELETE_BLOG',\n      data: blogId,\n    })\n  }\n}\n\nexport const commentBlog = (blogId, comment) => {\n  return async (dispatch) => {\n    const newComment = await blogService.addComment(blogId, comment)\n    dispatch({\n      type: 'NEW_COMMENT',\n      data: { id: blogId, comment: newComment },\n    })\n  }\n}\n\nexport default reducer\n","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nconst loginService = { login }\n\nexport default loginService\n","import loginService from '../services/login'\nimport blogService from '../services/blogs'\nimport { setNotification } from './notificationReducer'\n\nconst reducer = (state = null, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return action.data\n    case 'LOGOUT':\n      return null\n    default:\n      return state\n  }\n}\n\nconst setToken = (user) => {\n  window.localStorage.setItem('loggedBloglistUser', JSON.stringify(user))\n  blogService.setToken(user.token)\n}\n\nexport const login = (userObject) => {\n  return async (dispatch) => {\n    try {\n      const user = await loginService.login(userObject)\n      dispatch({\n        type: 'SET_USER',\n        data: user,\n      })\n      setToken(user)\n      dispatch(\n        setNotification(\n          `Hello ${user.name}! You have succesfully logged in.`,\n          'notification'\n        )\n      )\n    } catch (error) {\n      dispatch(setNotification('Wrong username or password.', 'error'))\n    }\n  }\n}\n\nexport const logout = () => {\n  window.localStorage.clear()\n  return {\n    type: 'LOGOUT',\n  }\n}\n\nexport const getUserFromToken = () => {\n  return async (dispatch) => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBloglistUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      blogService.setToken(user.token)\n      dispatch({\n        type: 'SET_USER',\n        data: user,\n      })\n    }\n  }\n}\n\nexport default reducer\n","import axios from 'axios'\nconst baseUrl = '/api/users'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then((response) => response.data)\n}\n\nconst userService = { getAll }\n\nexport default userService\n","import userService from '../services/users'\n\nconst reducer = (state = [], action) => {\n  switch (action.type) {\n    case 'INIT_USERS':\n      return action.data\n    default:\n      return state\n  }\n}\n\nexport const initialiseUsers = () => {\n  return async (dispatch) => {\n    const users = await userService.getAll()\n    dispatch({\n      type: 'INIT_USERS',\n      data: users,\n    })\n  }\n}\n\nexport default reducer\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport notificationReducer from './reducers/notificationReducer'\nimport blogReducer from './reducers/blogReducer'\nimport loginReducer from './reducers/loginReducer'\nimport userReducer from './reducers/userReducer'\n\nconst reducer = combineReducers({\n  notification: notificationReducer,\n  blogs: blogReducer,\n  login: loginReducer,\n  users: userReducer,\n})\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\n\nexport default store\n","import styled from 'styled-components'\n\nexport const Button = styled.button`\n  font-size: 1em;\n  margin: 1em 0;\n  padding: 0.25em 1em;\n  border: 2px solid MidnightBlue;\n  border-radius: 3px;\n  color: White;\n  background: MidnightBlue;\n`\nexport const LogoutButton = styled(Button)`\n  background: LightSteelBlue;\n  color: MidnightBlue;\n`\n\nexport const Footer = styled.div`\n  background: MidnightBlue;\n  padding: 1em;\n  margin-top: 5em;\n  color: White;\n`\n\nexport const InlineButton = styled(Button)`\n  margin: 1em;\n`\n\nexport const Input = styled.input`\n  margin: 0.25em 0.25em 0.25em 1em;\n  padding: 0.5em 0.25em;\n  border-radius: 3px;\n  border-style: hidden;\n\n  &: focus {\n    outline: none;\n  }\n`\n\nexport const Navigation = styled.div`\n  background: MidnightBlue;\n  padding: 1em;\n  color: White;\n`\n\nexport const NavLink = styled.div`\n  &&& {\n    color: White;\n    font-size: 1.25em;\n    padding: 5px;\n    display: inline;\n\n    a {\n      text-decoration: none;\n      color: White;\n      font-weight: bold;\n    }\n  }\n`\n\nexport const NavText = styled.p`\n  margin-left: 5em;\n  margin-right: 0.5em;\n  display: inline;\n`\n\nexport const Notification = styled.div`\n  font-size: 20px;\n  border-style: solid;\n  border-radius: 5px;\n  padding: 10px;\n  margin-bottom: 10px;\n`\n\nexport const Page = styled.div`\n  font-family: Helvetica Neue, sans-serif;\n\n  a {\n    text-decoration: none;\n    color: MidnightBlue;\n  }\n`\n\nexport const Title = styled.h1`\n  font-family: Tahoma, sans-serif;\n  font-size: 3em;\n`\n\nexport const SubTitle1 = styled(Title)`\n  font-size: 2em;\n`\n\nexport const SubTitle2 = styled(Title)`\n  font-size: 1em;\n  padding-top: 0.75em;\n  margin-bottom: 0.25em;\n`\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Notification } from './StyledComponents'\n\nconst NotificationMessage = () => {\n  const notification = useSelector((state) => state.notification)\n\n  return (\n    notification.content && (\n      <Notification className={notification.className}>\n        {notification.content}\n      </Notification>\n    )\n  )\n}\n\nexport default NotificationMessage\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, SubTitle1, Input } from '../StyledComponents'\n\nconst LoginForm = ({ handleLogin }) => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const handleUsernameChange = ({ target }) => {\n    setUsername(target.value)\n  }\n  const handlePasswordChange = ({ target }) => {\n    setPassword(target.value)\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    handleLogin({ username, password })\n    setUsername('')\n    setPassword('')\n  }\n\n  return (\n    <>\n      <SubTitle1>Log in to application</SubTitle1>\n      <form onSubmit={handleSubmit}>\n        <div>\n          username\n          <Input\n            type='text'\n            value={username}\n            name='Username'\n            onChange={handleUsernameChange}\n          />\n        </div>\n        <div>\n          password\n          <Input\n            type='password'\n            value={password}\n            name='Password'\n            onChange={handlePasswordChange}\n          />\n        </div>\n        <Button id='login-button' type='submit'>\n          login\n        </Button>\n      </form>\n    </>\n  )\n}\n\nLoginForm.propTypes = {\n  handleLogin: PropTypes.func.isRequired,\n}\n\nexport default LoginForm\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { SubTitle1, SubTitle2 } from '../StyledComponents'\n\nconst UserList = () => {\n  const users = useSelector((state) => state.users)\n\n  const alignCenter = {\n    textAlign: 'center',\n    verticalAlign: 'middle',\n  }\n\n  return (\n    <div>\n      <SubTitle1>Users</SubTitle1>\n      <table>\n        <thead>\n          <tr>\n            <td />\n            <td>\n              <SubTitle2>blogs created</SubTitle2>\n            </td>\n          </tr>\n        </thead>\n        <tbody>\n          {users.map((user) => (\n            <tr key={user.id}>\n              <td>\n                <Link to={`/users/${user.id}`}>{user.name}</Link>\n              </td>\n              <td style={alignCenter}>{user.blogs.length}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default UserList\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { SubTitle1, SubTitle2 } from '../StyledComponents'\n\nconst User = ({ user }) => {\n  if (!user) {\n    return null\n  }\n\n  return (\n    <div>\n      <SubTitle1>{user.name}</SubTitle1>\n      <SubTitle2>added blogs</SubTitle2>\n      <ul>\n        {user.blogs.map((blog) => (\n          <li key={blog.id}>{blog.title}</li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nUser.propTypes = {\n  user: PropTypes.object,\n}\n\nexport default User\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, SubTitle1, Input } from '../StyledComponents'\n\nconst BlogForm = ({ createBlog }) => {\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('')\n  const [url, setUrl] = useState('')\n\n  const addBlog = (event) => {\n    event.preventDefault()\n    createBlog({\n      title,\n      author,\n      url,\n    })\n    setTitle('')\n    setAuthor('')\n    setUrl('')\n  }\n\n  const handleTitleChange = ({ target }) => {\n    setTitle(target.value)\n  }\n  const handleAuthorChange = ({ target }) => {\n    setAuthor(target.value)\n  }\n  const handleUrlChange = ({ target }) => {\n    setUrl(target.value)\n  }\n\n  return (\n    <>\n      <SubTitle1>Add new blog</SubTitle1>\n      <form onSubmit={addBlog}>\n        <div>\n          title:\n          <Input\n            type='text'\n            value={title}\n            name='Title'\n            id='title'\n            onChange={handleTitleChange}\n          />\n        </div>\n        <div>\n          author:\n          <Input\n            type='text'\n            value={author}\n            name='Author'\n            id='author'\n            onChange={handleAuthorChange}\n          />\n        </div>\n        <div>\n          url:\n          <Input\n            type='text'\n            value={url}\n            name='Url'\n            id='url'\n            onChange={handleUrlChange}\n          />\n        </div>\n        <Button type='submit'>Add</Button>\n      </form>\n    </>\n  )\n}\n\nBlogForm.propTypes = {\n  createBlog: PropTypes.func.isRequired,\n}\n\nexport default BlogForm\n","import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\nimport { Button } from './StyledComponents'\n\nexport const Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return { toggleVisibility }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <Button onClick={toggleVisibility}>{props.buttonLabel}</Button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <Button onClick={toggleVisibility}>Cancel</Button>\n      </div>\n    </div>\n  )\n})\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n}\n\nTogglable.displayName = 'Togglable'\n\nexport default Togglable\n","import React, { useRef } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { addBlog } from '../../reducers/blogReducer'\nimport { setNotification } from '../../reducers/notificationReducer'\nimport { Link } from 'react-router-dom'\nimport BlogForm from './BlogForm'\nimport Togglable from '../Togglable'\nimport { SubTitle1 } from '../StyledComponents'\n\nconst BlogList = () => {\n  const blogs = useSelector((state) => state.blogs)\n  const dispatch = useDispatch()\n  const blogFormRef = useRef()\n\n  const blogStyle = {\n    paddingTop: 10,\n    paddingLeft: 2,\n    border: 'solid',\n    borderWidth: 1,\n    marginBottom: 5,\n  }\n\n  const createBlog = async (blogObject) => {\n    try {\n      blogFormRef.current.toggleVisibility()\n      dispatch(addBlog(blogObject))\n      dispatch(\n        setNotification(\n          `A new blog ${blogObject.title} by ${blogObject.author} added!`,\n          'notification'\n        )\n      )\n    } catch (exeption) {\n      dispatch(setNotification('Adding blog failed.', 'error'))\n    }\n  }\n\n  return (\n    <>\n      <Togglable buttonLabel='Add new blog' ref={blogFormRef}>\n        <BlogForm createBlog={createBlog} />\n      </Togglable>\n      <SubTitle1>Blogs</SubTitle1>\n      {blogs.map((blog) => (\n        <p key={blog.id} style={blogStyle}>\n          <Link to={`/blogs/${blog.id}`}>{blog.title}</Link>\n        </p>\n      ))}\n    </>\n  )\n}\n\nexport default BlogList\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { InlineButton, Input } from '../StyledComponents'\n\nconst CommentForm = ({ addComment, blogId }) => {\n  const [comment, setComment] = useState('')\n\n  const handleChange = ({ target }) => {\n    setComment(target.value)\n  }\n\n  const commentBlog = (event) => {\n    event.preventDefault()\n    addComment(blogId, comment)\n    setComment('')\n  }\n\n  return (\n    <form onSubmit={commentBlog}>\n      <div>\n        <Input\n          type='text'\n          value={comment}\n          name='Comment'\n          id='comment'\n          onChange={handleChange}\n        />\n        <InlineButton type='submit'>add comment</InlineButton>\n      </div>\n    </form>\n  )\n}\n\nCommentForm.propTypes = {\n  addComment: PropTypes.func.isRequired,\n  blogId: PropTypes.string.isRequired,\n}\n\nexport default CommentForm\n","import React, { useMemo } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Button, InlineButton, SubTitle1, SubTitle2 } from '../StyledComponents'\nimport CommentForm from './CommentForm'\n\nconst Blog = ({ blog, likeBlog, loggedInUserId, removeBlog, addComment }) => {\n  if (!blog) {\n    return null\n  }\n\n  const handleLikes = (event) => {\n    event.preventDefault()\n    likeBlog({ ...blog, likes: blog.likes + 1 })\n  }\n\n  const handleRemove = (event) => {\n    event.preventDefault()\n    removeBlog(blog)\n  }\n\n  const own = blog.user.id\n    ? loggedInUserId === blog.user.id\n    : loggedInUserId === blog.user\n\n  const creator = useMemo(() => blog.user.name, [])\n\n  return (\n    <>\n      <SubTitle1>\n        {blog.title} by {blog.author}\n      </SubTitle1>\n      <a href={blog.url}>{blog.url}</a>\n      <p>\n        likes {blog.likes}{' '}\n        <InlineButton onClick={handleLikes}>like</InlineButton>\n      </p>\n      <p>added by {creator}</p>\n      {own && <Button onClick={handleRemove}>remove</Button>}\n      <SubTitle2>comments</SubTitle2>\n      <CommentForm addComment={addComment} blogId={blog.id} />\n      <ul>\n        {blog.comments.map((comment, index) => (\n          <li key={index}>{comment}</li>\n        ))}\n      </ul>\n    </>\n  )\n}\n\nBlog.propTypes = {\n  blog: PropTypes.object,\n  likeBlog: PropTypes.func.isRequired,\n  loggedInUserId: PropTypes.string.isRequired,\n  removeBlog: PropTypes.func.isRequired,\n  addComment: PropTypes.func.isRequired,\n}\n\nexport default Blog\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { setNotification } from '../../reducers/notificationReducer'\nimport { logout } from '../../reducers/loginReducer'\nimport { LogoutButton, NavText } from '../StyledComponents'\n\nconst LoggedUserInfo = () => {\n  const dispatch = useDispatch()\n  const user = useSelector((state) => state.login)\n  const history = useHistory()\n\n  const handleLogout = (event) => {\n    event.preventDefault()\n    dispatch(logout())\n    dispatch(setNotification('Logging out completed.', 'notification'))\n    history.push('/')\n  }\n\n  return (\n    <>\n      <NavText>{user.name} is logged in</NavText>\n      <LogoutButton onClick={handleLogout}>logout</LogoutButton>\n    </>\n  )\n}\n\nexport default LoggedUserInfo\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Switch, Route, useRouteMatch, Link } from 'react-router-dom'\nimport {\n  initialiseBlogs,\n  updateBlog,\n  deleteBlog,\n  commentBlog,\n} from './reducers/blogReducer'\nimport { initialiseUsers } from './reducers/userReducer'\nimport { login, getUserFromToken } from './reducers/loginReducer'\nimport { setNotification } from './reducers/notificationReducer'\nimport NotificationMessage from './components/NotificationMessage'\nimport LoginForm from './components/user/LoginForm'\nimport UserList from './components/user/UserList'\nimport User from './components/user/User'\nimport BlogList from './components/blog/BlogList'\nimport Blog from './components/blog/Blog'\nimport LoggedUserInfo from './components/user/LoggedUserInfo'\nimport {\n  Title,\n  Page,\n  Navigation,\n  NavLink,\n  Footer,\n} from './components/StyledComponents'\n\nconst App = () => {\n  const dispatch = useDispatch()\n  const loggedInUser = useSelector((state) => state.login)\n  const users = useSelector((state) => state.users)\n  const blogs = useSelector((state) => state.blogs)\n\n  const userMatch = useRouteMatch('/users/:id')\n  const blogMatch = useRouteMatch('/blogs/:id')\n\n  useEffect(() => {\n    dispatch(initialiseBlogs())\n  }, [dispatch])\n\n  useEffect(() => {\n    dispatch(initialiseUsers())\n  }, [dispatch])\n\n  useEffect(() => {\n    dispatch(getUserFromToken())\n  }, [dispatch])\n\n  const handleLogin = async (userObject) => {\n    dispatch(login(userObject))\n  }\n\n  const likeBlog = async (blogObject) => {\n    const blogCreator = blogObject.user.id\n      ? blogObject.user.id\n      : blogObject.user\n    try {\n      dispatch(updateBlog(blogObject, blogCreator))\n    } catch (exeption) {\n      dispatch(setNotification('Updating blog failed.', 'error'))\n    }\n  }\n\n  const addComment = (blogId, comment) => {\n    try {\n      dispatch(commentBlog(blogId, comment))\n    } catch (exeption) {\n      dispatch(setNotification('Commenting blog failed.', 'error'))\n    }\n  }\n\n  const removeBlog = async (blogToDelete) => {\n    if (\n      window.confirm(\n        `Remove blog ${blogToDelete.title} by ${blogToDelete.author}?`\n      )\n    ) {\n      try {\n        dispatch(deleteBlog(blogToDelete.id))\n        dispatch(\n          setNotification(\n            `Removed ${blogToDelete.title} by ${blogToDelete.author}.`,\n            'notification'\n          )\n        )\n      } catch (exeption) {\n        dispatch(\n          setNotification(\n            `Removing ${blogToDelete.title} by ${blogToDelete.author} failed.`,\n            'error'\n          )\n        )\n      }\n    }\n  }\n\n  const user = userMatch\n    ? users.find((user) => user.id === userMatch.params.id)\n    : null\n  const blog = blogMatch\n    ? blogs.find((blog) => blog.id === blogMatch.params.id)\n    : null\n\n  return (\n    <Page>\n      <>\n        {loggedInUser && (\n          <Navigation>\n            <NavLink>\n              <Link to='/'>blogs</Link>\n            </NavLink>\n            <NavLink>\n              <Link to='/users'>users</Link>\n            </NavLink>\n            <LoggedUserInfo />\n          </Navigation>\n        )}\n        <Title>Bloglist</Title>\n        <NotificationMessage />\n        {!loggedInUser && <LoginForm handleLogin={handleLogin} />}\n      </>\n      <Switch>\n        <Route path='/users/:id'>{loggedInUser && <User user={user} />}</Route>\n        <Route path='/users'>{loggedInUser && <UserList />}</Route>\n        <Route path='/blogs/:id'>\n          {loggedInUser && (\n            <Blog\n              blog={blog}\n              likeBlog={likeBlog}\n              removeBlog={removeBlog}\n              loggedInUserId={loggedInUser.id}\n              addComment={addComment}\n            />\n          )}\n        </Route>\n        <Route path='/'>{loggedInUser && <BlogList />}</Route>\n      </Switch>\n      <Footer>\n        <em>\n          <small>Full Stack open 2021 blog list exercise by ajjmai</small>\n        </em>\n      </Footer>\n    </Page>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport store from './store'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}